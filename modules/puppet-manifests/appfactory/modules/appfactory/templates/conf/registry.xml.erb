<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
  ~ Copyright 2005-2009 WSO2, Inc. (http://wso2.com)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<wso2registry>

    <!--
    For details on configuring different config & governance registries see;
    http://wso2.org/library/tutorials/2010/04/sharing-registry-space-across-multiple-product-instances
    -->

    <currentDBConfig>wso2registry</currentDBConfig>
    <readOnly>false</readOnly>
    <enableCache>true</enableCache>
    <registryRoot>/</registryRoot>

    <dbConfig name="wso2registry">
	<dataSource>jdbc/WSO2CarbonDB</dataSource>	
    </dbConfig>

    <dbConfig name="governance">
	    <dataSource>jdbc/governance</dataSource>
    </dbConfig>

    <%- database = @registry_database -%>
    <remoteInstance url="https://registryernance.cloud-test.wso2.com">
        <id>governance</id>
        <dbConfig>governance</dbConfig>
        <readOnly>false</readOnly>
        <registryRoot>/</registryRoot>
        <enableCache>true</enableCache>
        <cacheId><%= database[2] %>@jdbc:mysql://<%= database[0] %>:3306/<%= database[1] %></cacheId>
    </remoteInstance>
    <mount path="/_system/governance" overwrite="virtual">
        <instanceId>governance</instanceId>
        <targetPath>/_system/governance</targetPath>
    </mount>

    <dbConfig name="config">
        <dataSource>jdbc/config</dataSource>
    </dbConfig>

     <%- database = @af_config_database -%>
    <remoteInstance url="https://registryernance.cloud-test.wso2.com">
        <id>config</id>
        <dbConfig>config</dbConfig>
        <readOnly>false</readOnly>
        <registryRoot>/</registryRoot>
        <enableCache>true</enableCache>
        <cacheId><%= database[2] %>@jdbc:mysql://<%= database[0] %>:3306/<%= database[1] %></cacheId>
    </remoteInstance>
    <mount path="/_system/config" overwrite="virtual">
        <instanceId>config</instanceId>
        <targetPath>/_system/config</targetPath>
    </mount>

    <!-- 
    <mount path="/_system/governance/dependencies" overwrite="true">
        <instanceId>governance</instanceId>
        <targetPath>/_system/governance/dependencies/${stage}</targetPath>
    </mount>
    -->
   <!--<handler class="org.wso2.carbon.registry.extensions.handlers.SynapseRepositoryHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.apache.synapse</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.SynapseRepositoryHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.apache.esb</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.Axis2RepositoryHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.apache.axis2</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.Axis2RepositoryHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/vnd.apache.wsas</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.WSDLMediaTypeHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/wsdl+xml</property>
        </filter>
    </handler>

    <handler class="org.wso2.carbon.registry.extensions.handlers.XSDMediaTypeHandler">
        <filter class="org.wso2.carbon.registry.core.jdbc.handlers.filters.MediaTypeMatcher">
            <property name="mediaType">application/x-xsd+xml</property>
        </filter>
    </handler> -->

    <!--remoteInstance url="https://localhost:9443/registry">
        <id>instanceid</id>
        <username>username</username>
        <password>password</password>
    </remoteInstance-->

    <!--remoteInstance url="https://localhost:9443/registry">
        <id>instanceid</id>
        <dbConfig>wso2registry</dbConfig>
        <readOnly>false</readOnly>
        <enableCache>true</enableCache>
        <registryRoot>/</registryRoot>
    </remoteInstance-->

    <!--mount path="/_system/config" overwrite="true|false|virtual">
        <instanceId>instanceid</instanceId>
        <targetPath>/_system/nodes</targetPath>
    </mount-->
    <!--metadataProviders>
        <baseProviders>
            <provider mediaType="vnd.wso2.service/http+xml;version=1"
                      versionMediaType="vnd.wso2.version/service+xml;version=1"
                      class="org.wso2.carbon.registry.metadata.provider.HTTPServiceProviderV1"/>

            <provider mediaType="vnd.wso2.generic/+xml;version=1" versionMediaType="vnd.wso2.version/generic+xml;version=1"
                      class="org.wso2.carbon.registry.metadata.provider.GenericMetadataProviderV1"/>

            <provider mediaType="vnd.wso2.endpoint/http+xml;version=1"
                      versionMediaType="vnd.wso2.version/endpoint+xml;version=1"
                      class="org.wso2.carbon.registry.metadata.provider.HTTPEndpointProviderV1"/>
        </baseProviders>
        <versionBaseProviders>
            <provider mediaType="vnd.wso2.version/service+xml;version=1"
                      class="org.wso2.carbon.registry.metadata.provider.version.ServiceVersionProviderV1"/>
            <provider mediaType="vnd.wso2.version/generic+xml;version=1"
                      class="org.wso2.carbon.registry.metadata.provider.version.GenericVersionProviderV1"/>
            <provider mediaType="vnd.wso2.version/endpoint+xml;version=1"
                      class="org.wso2.carbon.registry.metadata.provider.version.GenericVersionProviderV1"/>
        </versionBaseProviders>
    </metadataProviders-->
    <!-- This defines index configuration which is used in meta data search feature of the registry -->
    <indexingConfiguration>
        <startingDelayInSeconds>60</startingDelayInSeconds>
        <indexingFrequencyInSeconds>2</indexingFrequencyInSeconds>
        <!--number of resources submit for given indexing thread -->
        <batchSize>50</batchSize>
        <!--number of worker threads for indexing -->
        <indexerPoolSize>10</indexerPoolSize>
        <!-- location storing the time the indexing took place-->
        <lastAccessTimeLocation>/_system/local/repository/components/org.wso2.carbon.registry/indexing/lastaccesstime</lastAccessTimeLocation>
        <!-- the indexers that implement the indexer interface for a relevant media type/(s) -->
        <indexers>
            <indexer class="org.wso2.carbon.registry.metadata.index.GenericMetadataIndexer"
                     mediaTypeRegEx="vnd.wso2.(.)+/(.)+"/>
            <indexer class="org.wso2.carbon.governance.registry.extensions.indexers.RXTIndexer" 
		     mediaTypeRegEx="application/vnd.(.)+\+xml"/>
        </indexers>
        <exclusions>
            <exclusion pathRegEx="/_system/config/repository/dashboards/gadgets/swfobject1-5/.*[.]html"/>
            <exclusion pathRegEx="/_system/local/repository/components/org[.]wso2[.]carbon[.]registry/mount/.*"/>
        </exclusions>
    </indexingConfiguration>

    <versionResourcesOnChange>false</versionResourcesOnChange>

    <!-- NOTE: You can edit the options under "StaticConfiguration" only before the
     startup. -->
    <staticConfiguration>
        <versioningProperties>true</versioningProperties>
        <versioningComments>false</versioningComments>
        <versioningTags>false</versioningTags>
        <versioningRatings>false</versioningRatings>
    </staticConfiguration>
</wso2registry>
