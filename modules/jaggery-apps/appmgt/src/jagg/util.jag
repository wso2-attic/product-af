<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/jagg.jag");
var log = new Log("jagg/util.jag");
var permissionModule = jagg.module("permission");
var lifeCycleModule = jagg.module("lifecycle");

var getAllowedStages= function getAllowedStages(allStages,permissionPrefix,applicationKey){
	var stages=[];
    for (var i = 0; i < allStages.length ; i++) {

        if (permissionModule.isUserAccessGranted(applicationKey, permissionPrefix+allStages[i])){
            stages.push(allStages[i]);

        } else {
            log.debug("user do not have permission for stage "+ allStages[i] +" hence skipping");
            continue;
        }
    }
    return stages;
};


var hasUILevelResourceCreationPermission = function hasUILevelResourceCreationPermission(applicationKey){
	
	//This always returns one stage
    var initialStage = lifeCycleModule.getInitialLifeCycleStages()[0];
	return permissionModule.isUserAccessGranted(applicationKey, PERMISSION_RESOURCES_CREATE_FOR_STAGE + initialStage);
};

var hasUILevelResourceDeletePermission = function hasUILevelResourceDeletePermission(applicationKey, stageOfResource){

        //This always returns one stage
    var initialStage = lifeCycleModule.getInitialLifeCycleStages()[0];
    if(stageOfResource) {
        return permissionModule.isUserAccessGranted(applicationKey,
                                                    PERMISSION_RESOURCES_CREATE_FOR_STAGE + initialStage) &&
               permissionModule.isUserAccessGranted(applicationKey,
                                                    PERMISSION_RESOURCES_CREATE_FOR_STAGE + stageOfResource);
    }
    else {
        return false;
    }
};

var isDeleteButtonVisible = function isDeleteButtonVisible(stageOfResource) {
    var initialStage = lifeCycleModule.getInitialLifeCycleStages()[0];
    if (stageOfResource == initialStage) {
        return true;
    }
    else {
        return false;
    }
};

%>
