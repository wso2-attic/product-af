<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include('/jagg/constants.jag');

jagg.block("application/get", {
    initialize:function (data) {

    },

    getInputs:function () {
        return {
            "applicationKey":null
        }
    },

    getOutputs:function (inputs) {
    	var log = new Log();
        var applicationKey = request.getParameter("applicationKey");
    	var mod = jagg.module("manager");
    	var lifeCycleModule = jagg.module("lifecycle");
    	var applicationMod = jagg.module("application");

        var userName = jagg.getUser();
        var stagesMap = {};
        var applicationInfo;

        if(userName) {

            // create stages map
            var stages = lifeCycleModule.getAllLifeCycleStages(applicationKey);
            for (var index in stages) {
                var isAllowed = jagg.module("permission").isUserAccessGranted(inputs.applicationKey, PERMISSION_DEPLOY_TO + stages[index]);
                stagesMap[stages[index]] = isAllowed;
            }

            var applicationType = mod.getApplicationType(applicationKey);
            var isCodeEditorSupported = mod.getApplicationTypeBean(applicationType).isCodeEditorSupported();
            var hasDomainMappingPermission = jagg.module("permission").isUserAccessGranted(inputs.applicationKey, PERMISSION_DOMAIN_MAPPING);
            var fineGrainedDomainMappingAllowedStage = getProperty(FINE_GRAINED_DOMAIN_MAPPING);
            applicationInfo = applicationMod.getAppInfo(applicationKey);
        }

    	return {
			"isCodeEditorSupported":isCodeEditorSupported,
			"hasDomainMappingPermission":hasDomainMappingPermission,
			"fineGrainedDomainMappingAllowedStage":fineGrainedDomainMappingAllowedStage,
			"stagesMap": stagesMap,
			"applicationInfo": applicationInfo
    	};
    }

});
%>