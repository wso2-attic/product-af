<%
/*
 * Copyright (c) 2014, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

jagg.template("resources/apis/get", function(inputs, outputs, jagg) { %>
<%
var log = new Log();
var applicationName = request.getParameter("applicationName");
var applicationKey = request.getParameter("applicationKey");
var apiManagerStoreUrl = getProperty(API_MANAGER_STORE_URL);
var apiMStoreSubscriptionUrl = getProperty(API_MANAGER_STORE_SUBSCRIPTION_URL);

var apiManagerServerUrl = getProperty(API_MANAGER_SERVER_URL);
var apiManagerButton = getProperty(API_MANAGER_BUTTON);
var appInfo = session.get("APP_INFO");
var language;
if (appInfo) {
	language = appInfo.language;
}
var helpTips = outputs.helpTips;
%>

<input type="hidden" value="<%=applicationKey%>" name="applicationKey" id="applicationKey" />
<input type="hidden" name="userName"  id="userName" value='<%= jagg.getUser() %>'/>
<!-- adding script elements here -->
<script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/userActivity.js'))%>"></script>
<script type="text/javascript">
	var MAX_URL_LENGTH = 20;
	var URL_SUFFIX = '...';
    var keyMappins={};

	function loadKeyNameMappings(){
		keyMappins['sandboxKey']="Sandbox Access Token";
		keyMappins['sandboxConsumerKey']="Sandbox Consumer Key";
		keyMappins['sandboxConsumerSecret']="Sandbox Consumer Secret";
		keyMappins['prodKey']="Production Access Token";
		keyMappins['prodConsumerKey']="Production Consumer Key";
		keyMappins['prodConsumerSecret']="Production Consumer Secret";
	}

	function addApi(applicationKey) {
        jagg.post("../blocks/resources/apis/add/ajax/add.jag", {
            action:"createApplication",
            applicationKey:applicationKey,
            username:$("#userName").val()
        });
    }

    function saveAndRetrieve(isSyncNeeded){
        $("#keySection").show();
    	$("#keySection").html('<span class="icon-spinner icon-spin icon-large spin-large" style="margin:5px;font-size:30px;width:40px;height:40px;line-height:40px;"></span>');
    	jagg.post("../blocks/resources/apis/key/ajax/key.jag", {
    		action:"getSavedKeys",
    		applicationKey:$("#applicationKey").val(),
    		isSync: isSyncNeeded,
    		userName:$("#userName").val()
    	},
    	function (result) {
      		if(result == 0){
    			$("#keySection").hide();
        		jagg.message({
                    content: 'Keys yet are not generated for this subscription. Application Owner should generate keys from API Manager',
                    type: 'warning',
                    id:'uniqueId1'
                });
    			return;
    		}
    		var parsedResult = jQuery.parseJSON(result);

    		var keyValuesExists = false;
    		for(var keyName in parsedResult){
    			if(parsedResult[keyName] == null || (keyMappins[keyName].indexOf("Token") !== -1)){
    				delete parsedResult[keyName];
    			}else{
    				keyValuesExists = true;
    			}
    		}

    		if(keyValuesExists){
    			$("#keySection").show();
    	    	$("#keySection").html('<span class="icon-spinner icon-spin icon-large"></span>');
        		var keyTableBodyHTML = '<li class="list_row_item first_list_row_item">'
                    +'<ul class="list_row first_list_row">'
                        +'<li class="list_col first_list_col col-3">'
                           +'<h2 class="list_col_heading">Key</h2>'
                        +'</li>'
                        +'<li class="list_col col-9">'
                            +'<h2 class="list_col_heading">Value</h2>'
                       +'</li>'
                   + '</ul>'
                + '</li>';
            		$("#keySection").empty();
            		$("#keySection").append(keyTableBodyHTML);

            		for(var keyName in parsedResult){
        				keyTableBodyHTML +='<li class="list_row_item ">'+
        				                 '<ul class="list_row ">'+
        				                     '<li class="list_col col-3">'+
        				                         '<div class="list_col_content">'+
        				                             '<span >' + keyMappins[keyName] + '</span>'+
        				                         '</div>'+
        				                     '</li>'+
        				                     ' <li class="list_col col-9">'+
        				                         '<div class="list_col_content">'+
        				                             '<span >' + parsedResult[keyName] + '</span>'+
        				                         '</div>'+
        				                     '</li>'+
        				                 '</ul>'+
        				               '</li>';
        	    	}
        			$("#keySection").append(keyTableBodyHTML);
    		}else{
    	 		$("#keySection").html("<div class='noData-message'>Keys yet are not generated for current API subscription. Please contact the application owner.</div>");
    		}
    	},
    	function (jqXHR, textStatus, errorThrown) {
    		$("#keySection").hide();

    		if (jqXHR.status != 0){
    	           jagg.message({
    	                content: 'Error occurred while retriving Keys',
    	                type: 'error',
    	                id:'uniqueId1'
    	            });
    		}


    	});
    }

    function isAppOwner() {
        jagg.post("../blocks/application/get/ajax/list.jag", {
                    action:"getAppOwner",
                    applicationKey:$("#applicationKey").val()
                },
                function (appowner) {
                	var loggedInuser = $("#userName").val();
                	var isAppOwner = (appowner.trim() == loggedInuser.trim())?true:false;
                	var tenant = loggedInuser.substring(loggedInuser.lastIndexOf('@') + 1);

                    if(isAppOwner){
    		          	var url = '<%=apiMStoreSubscriptionUrl%>' + "?tenant=" + tenant;
    		            var $elm = $('<a class="btn main" href="'+ url +'" target="_blank"><%=apiManagerButton%></a>').click(function(){addApi('<%=applicationKey%>')});
                        $('#btnItem').append($elm);
                        $('#renewbtnContainer').append('<button type="button" id="renewApiBtn" class="btn main push_top_20 push_bottom_40" onclick="syncKeys()" disabled="true">Sync Keys</button>');
                        //drawAPIsTable();
                    }else{
                    	$('#renewbtnContainer').append('<div class="main push_top_20 push_bottom_40"></div>');
                    }
                    getAPIsOfAppOwnerApp(appowner, tenant, isAppOwner);
                },
                function (jqXHR, textStatus, errorThrown) {
                    // add the error label in the grid

                });
    }

    function getAPIsOfAppOwnerApp(appowner, tenant, isAppOwner) {
        $("#apiSection").show();
        $("#apiSection").empty().append('<span class="icon-spinner icon-spin icon-large spin-large" style="margin:5px;font-size:30px;width:40px;height:40px;line-height:40px;"></span>');
    	jagg.post("../blocks/resources/apis/get/ajax/get.jag", {
            action:"getAPIsOfApp",
            applicationKey:$("#applicationKey").val(),
            appowner:appowner
        },
        function (result) {
        	parsedResult=jQuery.parseJSON(result);
        	if(parsedResult.length == 0){
                if(isAppOwner){
                    var url = '<%=apiManagerStoreUrl%>' + "?tenant=" + tenant;
                    var $elm = $('<a class="btn main" href="'+ url +'" target="_blank"><%=apiManagerButton%></a>').click(function(){addApi('<%=applicationKey%>')});
                    $('#btnItem').empty().append($elm);
                }
        		$("#apiSection").empty().append("<div class='noData-message'>APIs have not been subscribed yet.</div>");
        	}
        	else{
        		$("#renewApiBtn").removeAttr("disabled");
	            var tableBodyHTML = '<li class="list_row_item first_list_row_item">'
	            						+'<ul class="list_row first_list_row">'
	            							+'<li class="list_col col-2">'
	            								+'<h2 class="list_col_heading">Name</h2>'
	            							+'</li>'
	            							+'<li class="list_col col-1">'
	            								+'<h2 class="list_col_heading">Version</h2>'
	            							+'</li>'
							                +'<li class="list_col col-3">'
							                	+'<h2 class="list_col_heading">Description</h2>'
							                +'</li>'
							                +'<li class="list_col col-3">'
						                	+'<h2 class="list_col_heading">Provider</h2>'
						                    +'</li>'
							                +'<li class="list_col col-3">'
							                	+'<h2 class="list_col_heading">Endpoints</h2>'
							                +'</li>'
							              +'</ul>'
	                                 +'</li>';

	        	for(var i=0; i < parsedResult.length;i++){
	        		var API = parsedResult[i];
	                	var endpointUrl = ' <%=apiManagerStoreUrl%>'+'/'+API.name+'/'+API.version;
	            		 tableBodyHTML +='<li class="list_row_item first_list_row_item">'+
	                     '<ul class="list_row first_list_row ">'+
	                         '<li class="list_col col-2">'+
	                             '<div class="list_col_content">'+
	                                      API.name +
	                             '</div>'+
	                         '</li>'+
	                         '<li class="list_col col-1">'+
	                             '<div class="list_col_content">'+
	                                  API.version +
	                             '</div>'+
	                         '</li>'+
	                         '<li class="list_col col-3">'+
	                         	'<div class="list_col_content">'+ API.description + '</div>'+
	                         '</li>'+
	                         '<li class="list_col col-3">'+
	                             '<div class="list_col_content">'+
	                                 '<span>' + API.provider + '</span>'+
	                             '</div>'+
	                         '</li>'+
	                         '<li class="list_col col-3">'+
	                             '<div class="list_col_content css_trim"  title="'+ endpointUrl + '">'+ endpointUrl + '</div>'+
	                         '</li>'+
	                     '</ul>'+
	                '</li>';
	        	}

	        	$("#apiSection").empty().append(tableBodyHTML);
                saveAndRetrieve(false);
        	}
        },
        function (jqXHR, textStatus, errorThrown) {

            if (jqXHR.status != 0){
                jagg.message({
                    content: 'Error occurred while reading API information',
                    type: 'error',
                    id:'uniqueId1'
                });
            }
        });
    }

    function syncKeys(){
	jagg.removeMessage('uniqueId1');
    	saveAndRetrieve(true);
    }

// ////////////// External api

    function prepareDataModel(resultJson){
    	var tableModel = {};
		var j = 0;
		for(var apiName in resultJson){
			var tableRowModel = {};
			tableRowModel['name'] = apiName;
			var details = resultJson[apiName];
		    var stages = {};
			for (var i = 0; i < details.length; i++) {
				var envDetail = details[i];
				var stageModel = {};
				for(var envName in envDetail){
					var apiData = envDetail[envName];
					for (var k = 0; k < apiData.length; k++) {
						var data = apiData[k];
						if(data.name == 'authentication'){
							tableRowModel[data.name] = data.value;
						}else{
							stageModel[data.name] = data.value;
						}

					}
					stages[envName]	= stageModel;
				}
			}
			 tableRowModel['stages']= stages;
			 tableModel[j++] = tableRowModel;
		}
		return tableModel;
    }

	/**
	 * Get MAX_URL_LENGTH url if the url length exceeds MAX_URL_LENGTH
	 * @param value url
	 * @returns MAX_URL_LENGTH url
	 */
    function formatUrlValue(value) {
        if(value.length > MAX_URL_LENGTH) {
            value = value.substring(0, (MAX_URL_LENGTH - URL_SUFFIX.length)) + URL_SUFFIX;
        }
        return value;
    }

    function loadExternalAPIs(apiName, apiVersion, apiProvider) {
        $("#externalapi").show();
        $("#externalapi").empty().append('<span class="icon-spinner icon-spin icon-large spin-large" style="margin:5px;font-size:30px;width:40px;height:40px;line-height:40px;"></span>');
        jagg.post("../blocks/resources/externalapi/get/ajax/list.jag", {
            action:"getExternalAPIs",
            applicationKey:$("#applicationKey").val()
        },
        function (result) {
            var elementIds=[];
			var apiIndex;
			var resultJson = JSON.parse(result);
			if(jQuery.isEmptyObject(resultJson)){
        		$("#externalapi").empty().append("<div class='noData-message'>No External APIs are created yet.</div>");
        	}
			else
			{
				var tableModel = prepareDataModel(resultJson);
			    var codeSnippetHTML=codeSnippet.generate("<%=language%>","Properties","<%=applicationKey%>",name);
			    var snippets=(codeSnippetHTML!=undefined);
				var tableBodyHTML = "";
				var url = "#";
				var count = 0;
				for (var index in tableModel) {
					tableBodyHTML += '<div class="list_col_content">';
				    var row = tableModel[index];
			        elementIds.push(row.name);

				      count = 0;
				    for (var stageName in row.stages) {
				        var stageValues = row.stages[stageName];
				        url = "<%=jagg.getAbsoluteUrl("/site/pages/externalapi.jag")%>?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>&pagePath=apimanager&isEdit=true&resourceName=" + row.name+"&environment="+stageName;
				        if (count++ == 0) {
				            tableBodyHTML += '<li class="list_row_item first_list_row_item">' + '<ul class="list_row first_list_row">'
				            				+ '<li class="col-3">' + '<div class="list_col_content">' + '<ul class="list">'
				            				+ '<li>' + row.name + '</li>' + '</ul>';
				        if(snippets)
				            tableBodyHTML+='<span id="snippet_'+row.name+'" class="pointer_cursor"><a class="next_page">Code Snippet</a>&nbsp;'
				            				+'<span class="icon-circle-arrow-down" style="color:#F47A20;"></span></span>';

				            tableBodyHTML += '</div></li><li class="col-5">' + '<div class="list_col_content">' + '<ul class="list">'
				            				+ '<li>' + row.authentication + '</li>' + '</ul> </div></li>';

				            tableBodyHTML += '<li class="col-4">';
				        }
				        tableBodyHTML += '<div class="list_col_content">';
				        tableBodyHTML += '<a title="Edit" style="margin-left:0px;text-decoration:none" href="' +url +'"><span class="icon-edit"></span></a><span style="padding-left:6px;font-size: 0.857142857em;"><b>'+ stageName +' :</b> ' + formatUrlValue('url:' + stageValues['url']) +' </span></br>';
				        tableBodyHTML += '</div>';
				    }

				   		tableBodyHTML+= '</li></ul>';
				        if(snippets)
				   		tableBodyHTML+='<div id="code'+row.name+'" style="display: none;" class="code">'
										+codeSnippet.generate("Java","Apis","<%=applicationKey%>",row.name,row);
										+'</div>';

						tableBodyHTML+='</div>';
				}

				var initTableTxt = '<li class="list_row_item first_list_row_item">' +
	            			'<ul class="list_row first_list_row">' +
	            			'<li class="col-3">' +
	            			'<h2 class="list_col_heading">Name</h2>' +
	            			'</li>' +
	            			'<li class="col-5">' +
	            			'<h2 class="list_col_heading">Authentication</h2>'+
	            			'</li>' +
	            			'<li class="col-4">' +
	            			'<h2 class="list_col_heading">Values</h2>'+
	            			'</li>' +
	            			'</ul>' +
	            			'</li>';
				$("#externalapi").empty().append(initTableTxt).append(tableBodyHTML);
				for (var index in elementIds) {
				    var name = elementIds[index];

				    //tableBodyHTML += '<ul class="list_row first_list_row">'
					$("#snippet_"+name).click(function(){
						$crtl=$(this);
		 				$(this).parent().parent().parent().next().slideToggle( "fast", function(){
		  	 				});
						});
				}

				$("pre.clipboard").snippet("java",{style:"ide-eclipse",showNum:false});
        	}
        },
        function (jqXHR, textStatus, errorThrown) {
            // add the error label in the grid
        });
    }
    function showHideTabs(linkTab){
        $('li',$(linkTab).parent()).removeClass('active');
        $(linkTab).addClass('active');
        var tabData =  $(linkTab).attr('data-value');
        var $parentTab = $(linkTab).parent().parent();
        $('.tab-data' ,$parentTab).hide();
        $('.tab-data' ,$parentTab).each(function(){
            if($(this).attr('data-value') == tabData){
                $(this).show();
            }
        });
    }
    $(document).ready(function(){
    	initializeUserActivity("apis",'<%=applicationKey%>', '<%=applicationName%>');
	    setHelpTips(<%= helpTips %>);
    	loadKeyNameMappings();
    	loadExternalAPIs();
    	isAppOwner();
    });

    function showKeysByRole(parsedResult){
   	 var keyTableBodyHTML = "";
       	 for(var i=0; i < parsedResult.length;i++){
   			var valuePair = parsedResult[i];
   			var name = valuePair.name;
   			var value = valuePair.value;
   			if(!value){
   	   			continue;
   			}
            keyTableBodyHTML +='<li class="list_row_item  ">'+
   	               '<ul class="list_row  ">'+
   	                   '<li class="list_col first_list_col col-3">'+
   	                       '<div class="list_col_content">'+
   	                           '<span class="prime">' + keyMappins[name] + '</span>'+
   	                       '</div>'+
   	                   '</li>'+
   	                   ' <li class="list_col col-4">'+
   	                       '<div class="list_col_content">'+
   	                           '<span class="prime">' + value + '</span>'+
   	                       '</div>'+
   	                   '</li>'+
   	               '</ul>'+
   	             '</li>';

       	 }
            $("#keySection").append(keyTableBodyHTML);
    }

    function keysAvailableInRegistry() {
        jagg.post("../blocks/resources/apis/key/ajax/key.jag", {
            action:"keysExistsInAllStages",
            applicationKey:$("#applicationKey").val(),
            userName:$("#userName").val()
        },
        function (result) {
    		if(result == 'true'){
    			saveAndRetrieve(false);
    		}
        },
        function (jqXHR, textStatus, errorThrown) {
        	$("#keySection").hide();

        	if (jqXHR.status != 0){
                jagg.message({
                    content: 'Error occurred while checking the existance of Keys in registries',
                    type: 'error',
                    id:'uniqueId1'
                });
        	}


        });
    }

    function setHelpTips(helpTips){
		$("#apiHelp").html(helpTips.apiHelp);
		$("#enterpriseApiHelp").html(helpTips.enterpriseApiHelp);
     }

</script>

<style type="text/css">
    .span9 label{
     font-size:12px;
    }
</style>

<div class="container">
<article class="main">
   <header>
      <div> <% jagg.includeBlock("page/messages", null); %>
       <% jagg.includeBlock("page/eventing", {"applicationKey":null,"pageName":PAGES.RESOURCES}); %>
       <% jagg.includeBlock("page/notification-wall", {"wall_name":applicationKey+" - App Wall","applicationKey":applicationKey,"pageName":"App Home"}); %>
       </div>
      <div class="content">
         <h1>Runtime Configs</h1>
      </div>
   </header>
   <% jagg.includeBlock("resources/menu", {page:'apis',applicationName:applicationName,applicationKey:applicationKey}); %>
   <% jagg.includeBlock("page/help", {"section": "resources-apis"}); %>
   <section class="separator">
      <div class="page_nav" style="border-bottom: 0 ;">
         <div class="content clear">
            <ol class="breadcrumb left">
               <li class="breadcrumb_item">
                  <h2>Enterprise APIs</h2>
               </li>
            </ol>
            <div class="right btn_list_box">
               <ul class="inline_box inline_list btn_list" id="gotoApiManagerbtnContainer">
                  <li class="inline_item" id="btnItem"></li>
               </ul>
               <div class="clearfix"></div>
            </div>
         </div>
      </div>
      <div class="content clear">
         <h2 class=" no_margin">Saved Keys</h2>
         <ul class="list_table push_top_20" id="keySection">
         </ul>
         <div id="renewbtnContainer"></div>
         <h2>Subscribed APIs</h2>
         <div class="help-block"><span class="help-icon">?</span> <span id="enterpriseApiHelp"></span></div>
         <ul class="list_table push_top_20" id="apiSection">
         </ul>
      </div>
      <div class="page_nav push_top_20" style="border-bottom: 0 ;border-top: 1px solid #B0D1D8 ;">
         <div class="content clear">
            <ol class="breadcrumb left">
               <li class="breadcrumb_item">
                  <h2>External APIs</h2>
               </li>
            </ol>
            <% if(outputs.hasCreateResourcePermissions){ %>
            <div class="right btn_list_box">
               <ul class="inline_box inline_list btn_list" id="gotoApiManagerbtnContainer">
                  <li class="inline_item" id="btnItem"><a class="btn main" href="../pages/externalapi.jag?applicationName=<%=applicationName%>&applicationKey=<%=applicationKey%>&pagePath=apimanager">Add External API</a></li>
               </ul>
               <div class="clearfix"></div>
            </div>
            <%}%>
         </div>
      </div>
      <div class="content clear">
         <!--div id="renewbtnContainer"></div-->
         <h2>Subscribed APIs</h2>
          <div class="help-block"><span class="help-icon">?</span> <span id="apiHelp"></span></div>
         <ul class="list_table push_top_20" id="externalapi">
         </ul>
      </div>
   </section>
</article>
</div>


<% }); %>
